#!/usr/bin/python3
import sys
import os

# Allowed letters in Sicilian
LETTERS = set('qertuiopasdfghjlzxcvbnmàèìòù')


def get_exclusions() -> set[str]:
    '''
    Load all the exclusion sets
    '''
    r = set()
    for i in os.listdir('exclude'):
        with open(f'exclude/{i}', 'rt') as f:
            r = r.union({j.strip() for j in f})
    return r


def word_yielder(fname: str):
    exclusions = get_exclusions()
    with open(fname, 'rt') as f:
        for line in f:
            for i in line.split(' '):
                i = i.strip()
                
                if len(i) == 0:
                    continue
                if set(i).difference(LETTERS):
                    continue
                if i in exclusions:
                    continue
                
                yield i

def word_grouper(yielder) -> dict[str, int]:
    r = {}
    for i in yielder:
        if i not in r:
            r[i] = 0
        r[i] += 1
    return r

def group_sorter(d: dict[str, int]):
    # Put the words and exclude too short and uncommon stuff
    r = [i for i in d.items() if i[1] >= 4]
    r.sort(key=lambda i: i[1], reverse=True)
    return (i[0] for i in r)

def main():
    words = word_yielder(sys.argv[1])
    groups = word_grouper(words)
    for i in group_sorter(groups):
        print(i)

if __name__ == '__main__':
    main()
